#!/usr/bin/python
# -*- coding: utf-8 -*-

# (c) 2014-2015, Raphael Randschau <nicolai86@me.com>

DOCUMENTATION = '''
---
module: diff
short_description: diffs directories and files
version_added: "1.0"
author: Raphael Randschau
options:
  paths:
    description:
      - paths to check for diffs. Format expected is { next: "/bar" ,current: "/foo" }
    required: yes
'''

EXAMPLES = '''
# check paths for diffs
diff: paths=[{ next: "/bar", current: "/foo" }]
'''

import re
import filecmp
import os
import sys
import subprocess
from subprocess import check_output

def flatten(items, seqtypes=(list, tuple)):
    for i, x in enumerate(items):
        while isinstance(items[i], seqtypes):
            items[i:i+1] = items[i]
    return items

class DiffModule(object):
    diffs = []
    def __init__(self):
        self.diffs = []

    def _diff(self, path_a, path_b):
        """returns False if both paths are the same, otherwise True"""
        if not os.path.exists(path_a) and not os.path.exists(path_b):
            return 0

        rc = subprocess.call(['diff', '-r', '-q', path_a, path_b])
        return rc

    def check(self, paths):
        has_diffs = False
        if paths != None and len(paths) > 0:
            for path in flatten(paths):
                if isinstance(path, list) or isinstance(path, tuple):
                    path = path[0]

                if not isinstance(path, dict):
                    raise Exception('''all paths must be dict({'current': '/some/path', 'next': '/other/path'}). Got ''' + type(path).__name__)

                path['current'] = os.path.realpath(path['current'])
                path['next']    = os.path.realpath(path['next'])

                diff_rc = self._diff(path['current'], path['next'])
                if diff_rc != 0:
                    path['rc'] = diff_rc
                    self.diffs.append(path)
                has_diffs = has_diffs or (diff_rc != 0)
        return has_diffs

def main():
    module = AnsibleModule(
        argument_spec = dict(
            paths      = dict(required=False, type='list')
        ),
        supports_check_mode = True,
        mutually_exclusive = [ ],
    )

    diff = DiffModule()

    paths = module.params['paths']
    has_diffs = diff.check(paths)
    module.exit_json(paths=paths, changed=has_diffs, diffs=diff.diffs)

from ansible.module_utils.basic import *

main()
